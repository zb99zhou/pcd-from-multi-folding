   Compiling hex v0.4.3
   Compiling ff_derive v0.13.0
   Compiling blst v0.3.11
   Compiling num-bigint v0.4.4
   Compiling pasta_curves v0.5.1
   Compiling blstrs v0.7.1
   Compiling neptune v11.0.0
   Compiling ff v0.13.0
   Compiling group v0.13.0
   Compiling bellpepper-core v0.2.1
   Compiling pairing v0.23.0
   Compiling bellpepper v0.2.1
   Compiling halo2curves v0.4.0
   Compiling pasta-msm v0.1.4
   Compiling nova-snark v0.23.0 (/Users/coolwind/Codes/rust/pcd-from-multi-folding)
libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0283]: type annotations needed
   --> src/nimfs/nova_circuit.rs:85:15
    |
85  |             c.absorb_in_ro(&mut ro)?;
    |               ^^^^^^^^^^^^ cannot infer type of the type parameter `CS` declared on the method `absorb_in_ro`
    |
    = note: cannot satisfy `_: ConstraintSystem<<G as traits::Group>::Base>`
    = help: the following types implement trait `ConstraintSystem<Scalar>`:
              <ShapeCS<G> as ConstraintSystem<<G as traits::Group>::Scalar>>
              <SatisfyingAssignment<G> as ConstraintSystem<<G as traits::Group>::Scalar>>
              <MultiEq<Scalar, CS> as ConstraintSystem<Scalar>>
              <Namespace<'cs, Scalar, CS> as ConstraintSystem<Scalar>>
              <TestShapeCS<G> as ConstraintSystem<<G as traits::Group>::Scalar>>
              <MetricCS<Scalar> as ConstraintSystem<Scalar>>
              <BenchCS<Scalar> as ConstraintSystem<Scalar>>
              <TestConstraintSystem<Scalar> as ConstraintSystem<Scalar>>
            and 2 others
note: required by a bound in `AllocatedLCCCSSecondPart::<G>::absorb_in_ro`
   --> src/gadgets/cccs.rs:496:29
    |
496 |     pub fn absorb_in_ro<CS: ConstraintSystem<<G as Group>::Base>>(
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AllocatedLCCCSSecondPart::<G>::absorb_in_ro`
help: consider specifying the generic argument
    |
85  |             c.absorb_in_ro::<CS>(&mut ro)?;
    |                           ++++++

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
  --> src/gadgets/cccs.rs:46:60
   |
46 |                 || Ok(cccs.get().map_or(G::Base::ZERO, |u| u.x[i])),
   |                                                            ^^^^^^ expected `traits::Group::Base`, found `traits::Group::Scalar`
   |
   = note: expected associated type `<G as traits::Group>::Base`
              found associated type `<G as traits::Group>::Scalar`
   = note: an associated type was expected, but a different one was found

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
   --> src/gadgets/cccs.rs:121:59
    |
121 |             || Ok(inst.get().map_or(G::Base::ZERO, |inst| inst.u)),
    |                                                           ^^^^^^ expected `traits::Group::Base`, found `traits::Group::Scalar`
    |
    = note: expected associated type `<G as traits::Group>::Base`
               found associated type `<G as traits::Group>::Scalar`
    = note: an associated type was expected, but a different one was found

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
   --> src/gadgets/cccs.rs:128:67
    |
128 |                 || Ok(f_to_nat(&inst.map_or(G::Base::ZERO, |inst| inst.x[i]))),
    |                                                                   ^^^^^^^^^ expected `traits::Group::Base`, found `traits::Group::Scalar`
    |
    = note: expected associated type `<G as traits::Group>::Base`
               found associated type `<G as traits::Group>::Scalar`
    = note: an associated type was expected, but a different one was found

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
  --> src/gadgets/sumcheck.rs:26:104
   |
26 |             .map(|(i, point)| AllocatedNum::alloc(cs.namespace(|| format!("alloc {i}th point")), || Ok(*point)))
   |                                                                                                     -- ^^^^^^ expected `traits::Group::Base`, found `traits::Group::Scalar`
   |                                                                                                     |
   |                                                                                                     arguments to this enum variant are incorrect
   |
   = note: expected associated type `<G as traits::Group>::Base`
              found associated type `<G as traits::Group>::Scalar`
   = note: an associated type was expected, but a different one was found
help: the type constructed contains `<G as traits::Group>::Scalar` due to the type of the argument passed
  --> src/gadgets/sumcheck.rs:26:101
   |
26 |             .map(|(i, point)| AllocatedNum::alloc(cs.namespace(|| format!("alloc {i}th point")), || Ok(*point)))
   |                                                                                                     ^^^------^
   |                                                                                                        |
   |                                                                                                        this argument influences the type of `Ok`
note: tuple variant defined here
  --> /private/tmp/rust-20231229-5088-os0lit/rustc-1.75.0-src/library/core/src/result.rs:506:5

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
  --> src/gadgets/sumcheck.rs:33:100
   |
33 |                 evaluations: alloc_vector_numbers(cs.namespace(|| format!("alloc {i}th iop_msg")), &iop_msg.evaluations)?
   |                              -------------------- arguments to this function are incorrect         ^^^^^^^^^^^^^^^^^^^^ expected `&[<G as Group>::Base]`, found `&Vec<<G as Group>::Scalar>`
   |
   = note: expected reference `&[<G as traits::Group>::Base]`
              found reference `&Vec<<G as traits::Group>::Scalar>`
note: function defined here
  --> src/gadgets/utils.rs:77:8
   |
77 | pub fn alloc_vector_numbers<F, CS>(
   |        ^^^^^^^^^^^^^^^^^^^^
78 |   mut cs: CS,
79 |   inputs: &[F],
   |   ------------

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
  --> src/gadgets/sumcheck.rs:39:100
   |
39 |             .map(|(i, sigmas)| alloc_vector_numbers(cs.namespace(|| format!("alloc {i}th sigma")), sigmas))
   |                                -------------------- arguments to this function are incorrect       ^^^^^^ expected `&[<G as Group>::Base]`, found `&Vec<<G as Group>::Scalar>`
   |
   = note: expected reference `&[<G as traits::Group>::Base]`
              found reference `&Vec<<G as traits::Group>::Scalar>`
note: function defined here
  --> src/gadgets/utils.rs:77:8
   |
77 | pub fn alloc_vector_numbers<F, CS>(
   |        ^^^^^^^^^^^^^^^^^^^^
78 |   mut cs: CS,
79 |   inputs: &[F],
   |   ------------

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
  --> src/gadgets/sumcheck.rs:44:100
   |
44 |             .map(|(i, thetas)| alloc_vector_numbers(cs.namespace(|| format!("alloc {i}th theta")), thetas))
   |                                -------------------- arguments to this function are incorrect       ^^^^^^ expected `&[<G as Group>::Base]`, found `&Vec<<G as Group>::Scalar>`
   |
   = note: expected reference `&[<G as traits::Group>::Base]`
              found reference `&Vec<<G as traits::Group>::Scalar>`
note: function defined here
  --> src/gadgets/utils.rs:77:8
   |
77 | pub fn alloc_vector_numbers<F, CS>(
   |        ^^^^^^^^^^^^^^^^^^^^
78 |   mut cs: CS,
79 |   inputs: &[F],
   |   ------------

libunwind: malformed __unwind_info at 0x191755CB8 bad second level page
error[E0308]: mismatched types
   --> src/gadgets/sumcheck.rs:258:50
    |
258 |             lhs = lhs.add(&Num::from(prod).scale(ccs_params.c[i]));
    |                                            ----- ^^^^^^^^^^^^^^^ expected `traits::Group::Base`, found `traits::Group::Scalar`
    |                                            |
    |                                            arguments to this method are incorrect
    |
    = note: expected associated type `<G as traits::Group>::Base`
               found associated type `<G as traits::Group>::Scalar`
    = note: an associated type was expected, but a different one was found
help: the return type of this call is `<G as traits::Group>::Scalar` due to the type of the argument passed
   --> src/gadgets/sumcheck.rs:258:28
    |
258 |             lhs = lhs.add(&Num::from(prod).scale(ccs_params.c[i]));
    |                            ^^^^^^^^^^^^^^^^^^^^^^---------------^
    |                                                  |
    |                                                  this argument influences the return type of `scale`
note: method defined here
   --> /Users/coolwind/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bellpepper-core-0.2.1/src/gadgets/num.rs:488:12
    |
488 |     pub fn scale(mut self, scalar: Base) -> Self {
    |            ^^^^^

Some errors have detailed explanations: E0283, E0308.
For more information about an error, try `rustc --explain E0283`.
error: could not compile `nova-snark` (lib) due to 9 previous errors
